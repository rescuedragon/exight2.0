name: Deploy to Production (exight.in)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Clean previous builds
      run: rm -rf node_modules dist .cache
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Add 404.html for SPA routing
      run: cp ./dist/index.html ./dist/404.html
      
    - name: Add production build marker
      run: |
        echo "<!-- PRODUCTION BUILD: $(date) -->" >> ./dist/index.html
        echo "<!-- Build ID: $(date +%s) -->" >> ./dist/index.html
        echo "<!-- Hash: $GITHUB_SHA -->" >> ./dist/index.html
      
    - name: Upload dist to production server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        port: ${{ secrets.PROD_SSH_PORT }}
        source: "dist/*"
        target: "/tmp/exight_production_dist"

    - name: Deploy to production Apache
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        port: ${{ secrets.PROD_SSH_PORT }}
        script_stop: true
        script: |
          set -euo pipefail

          echo "==> Detecting Apache DocumentRoot for exight.in"
          DOCROOT=$(sudo bash -lc 'grep -Ri "ServerName\\s\+exight\\.in" -n /etc/httpd/conf* -R | cut -d: -f1 | sort -u | head -n1 | xargs -r grep -i "DocumentRoot" -n | awk '{print $NF}' | head -n1') || true
          if [ -z "${DOCROOT:-}" ]; then
            # Fallback to global DocumentRoot
            DOCROOT=$(sudo bash -lc 'grep -i "^DocumentRoot" /etc/httpd/conf/httpd.conf | awk '{print $2}' | head -n1') || true
          fi
          if [ -z "${DOCROOT:-}" ]; then
            DOCROOT="/var/www/html"
          fi
          echo "Using DocumentRoot: $DOCROOT"
          sudo mkdir -p "$DOCROOT"

          echo "==> Backing up current production site"
          TS=$(date +%s)
          sudo mkdir -p /var/www/backups
          if [ -d "$DOCROOT" ]; then
            sudo tar -C "$DOCROOT" -czf "/var/www/backups/production_${TS}.tar.gz" . || true
          fi

          echo "==> Deploying to production"
          sudo rm -rf "$DOCROOT"/*
          sudo cp -a /tmp/exight_production_dist/dist/. "$DOCROOT"/

          echo "==> Setting permissions"
          sudo chown -R root:root "$DOCROOT"
          sudo find "$DOCROOT" -type d -exec chmod 755 {} +
          sudo find "$DOCROOT" -type f -exec chmod 644 {} +

          echo "==> Validating Apache config and reloading"
          sudo apachectl configtest
          sudo systemctl reload httpd || sudo service httpd reload

          echo "==> Production deployment complete!"
          echo "üåê Live at: https://exight.in"
          curl -I -s https://exight.in | sed -n '1,5p'
        
    - name: Notify deployment completion
      run: |
        echo "üéâ Production deployment to exight.in completed!"
        echo "üåê Live at: https://exight.in"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref_name }}"
